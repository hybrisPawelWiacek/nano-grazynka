openapi: 3.0.3
info:
  title: nano-Grazynka API
  description: Voice note transcription and summarization platform with multi-user support
  version: 2.0.0
  contact:
    name: nano-Grazynka Team

servers:
  - url: http://localhost:3101
    description: Development server
  - url: http://backend:3101
    description: Docker internal server

security:
  - cookieAuth: []

paths:
  # System endpoints
  /health:
    get:
      summary: Health check endpoint
      tags:
        - System
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                  database:
                    type: string
                    enum: [connected, disconnected]
                  observability:
                    type: object
                    properties:
                      langSmith:
                        type: boolean
                      openLLMetry:
                        type: boolean

  /ready:
    get:
      summary: Readiness check endpoint
      tags:
        - System
      security: []
      responses:
        '200':
          description: Service is ready
          content:
            application/json:
              schema:
                type: object
                properties:
                  ready:
                    type: boolean
                  services:
                    type: object
                    properties:
                      database:
                        type: boolean
                      storage:
                        type: boolean

  # Authentication endpoints
  /api/auth/register:
    post:
      summary: Create a new user account
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: Valid email address
                password:
                  type: string
                  minLength: 8
                  description: Minimum 8 characters
                tier:
                  type: string
                  enum: [free, pro, business]
                  default: free
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid input or email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/login:
    post:
      summary: Authenticate user and create session
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              schema:
                type: string
                description: JWT token in httpOnly cookie
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/logout:
    post:
      summary: Invalidate current session
      tags:
        - Authentication
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully

  /api/auth/me:
    get:
      summary: Get current authenticated user
      tags:
        - Authentication
      responses:
        '200':
          description: Current user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserDetailed'
        '401':
          $ref: '#/components/responses/Unauthorized'

  # Anonymous session endpoints
  /api/anonymous/usage:
    get:
      summary: Check anonymous session usage count
      tags:
        - Anonymous
      security: []
      parameters:
        - name: X-Session-Id
          in: header
          required: true
          schema:
            type: string
            description: Session ID from localStorage
      responses:
        '200':
          description: Usage information
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
                  usageCount:
                    type: integer
                  remainingCredits:
                    type: integer
                  limit:
                    type: integer

  /api/anonymous/migrate:
    post:
      summary: Convert anonymous session to registered user
      tags:
        - Anonymous
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sessionId
                - userId
              properties:
                sessionId:
                  type: string
                userId:
                  type: string
      responses:
        '200':
          description: Migration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  migrated:
                    type: integer
                    description: Number of notes migrated
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFound'

  # Voice notes endpoints
  /api/voice-notes:
    get:
      summary: List voice notes with filtering and pagination
      tags:
        - Voice Notes
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: search
          in: query
          schema:
            type: string
          description: Search in title and transcription
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, processing, completed, failed]
        - name: language
          in: query
          schema:
            type: string
            enum: [EN, PL]
        - name: tags
          in: query
          schema:
            type: string
          description: Comma-separated tags
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [createdAt, updatedAt, title]
            default: createdAt
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: List of voice notes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VoiceNote'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      summary: Upload a new voice note
      tags:
        - Voice Notes
      security:
        - cookieAuth: []
        - {}
      parameters:
        - name: X-Session-Id
          in: header
          required: false
          schema:
            type: string
            description: Session ID for anonymous users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Audio file (mp3, m4a, wav, flac, ogg, webm)
                title:
                  type: string
                  description: Optional title
                tags:
                  type: string
                  description: Comma-separated tags
                sessionId:
                  type: string
                  description: Session ID for anonymous users
                customPrompt:
                  type: string
                  description: Custom instructions for summarization
                transcriptionModel:
                  type: string
                  enum: ['gpt-4o-transcribe', 'google/gemini-2.0-flash-001']
                  description: Model selection for transcription (default gpt-4o-transcribe)
                whisperPrompt:
                  type: string
                  description: Hints for GPT-4o transcription (224 tokens max)
                geminiSystemPrompt:
                  type: string
                  description: System instructions for Gemini transcription
                geminiUserPrompt:
                  type: string
                  description: Context/template for Gemini (1M tokens max)
      responses:
        '201':
          description: Voice note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  voiceNote:
                    $ref: '#/components/schemas/VoiceNote'
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          description: Usage limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/voice-notes/{id}:
    get:
      summary: Get a specific voice note with details
      tags:
        - Voice Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Voice note details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceNoteDetailed'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a voice note
      tags:
        - Voice Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Voice note deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'

  /api/voice-notes/{id}/process:
    post:
      summary: Trigger processing of a voice note
      tags:
        - Processing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  enum: [EN, PL]
                  description: Override detected language
                systemPrompt:
                  type: string
                  description: Custom system prompt
                classificationPrompt:
                  type: string
                  description: Custom classification prompt
                summaryPrompt:
                  type: string
                  description: Custom summary prompt
      responses:
        '202':
          description: Processing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  voiceNote:
                    $ref: '#/components/schemas/VoiceNote'
                  message:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Already processing or completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/voice-notes/{id}/reprocess:
    post:
      summary: Reprocess a voice note with new prompts
      tags:
        - Processing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                systemPrompt:
                  type: string
                classificationPrompt:
                  type: string
                summaryPrompt:
                  type: string
                reason:
                  type: string
                  description: Reason for reprocessing
      responses:
        '202':
          description: Reprocessing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  voiceNote:
                    $ref: '#/components/schemas/VoiceNote'
                  message:
                    type: string
                  version:
                    type: integer
        '404':
          $ref: '#/components/responses/NotFound'

  /api/voice-notes/{id}/export:
    get:
      summary: Export a voice note
      tags:
        - Export
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: format
          in: query
          schema:
            type: string
            enum: [markdown, json]
            default: markdown
        - name: includeTranscription
          in: query
          schema:
            type: boolean
            default: true
        - name: includeSummary
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Exported content
          content:
            text/markdown:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/VoiceNoteExport'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
      description: JWT token in httpOnly cookie

  schemas:
    User:
      type: object
      required:
        - id
        - email
        - tier
        - credits
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        tier:
          type: string
          enum: [free, pro, business]
        credits:
          type: integer
          description: Credits used this month

    UserDetailed:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            createdAt:
              type: string
              format: date-time
            creditsResetDate:
              type: string
              format: date-time
            stripeCustomerId:
              type: string
              nullable: true

    VoiceNote:
      type: object
      required:
        - id
        - title
        - status
        - createdAt
        - updatedAt
        - fileSize
        - filePath
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        duration:
          type: integer
          nullable: true
          description: Duration in seconds
        fileSize:
          type: integer
          description: File size in bytes
        filePath:
          type: string
        tags:
          type: array
          items:
            type: string
        language:
          type: string
          enum: [EN, PL]
          nullable: true
        userId:
          type: string
          format: uuid
          nullable: true
          description: Optional for anonymous users
        sessionId:
          type: string
          nullable: true
          description: For anonymous users
        transcriptions:
          type: array
          items:
            $ref: '#/components/schemas/Transcription'
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/Summary'

    VoiceNoteDetailed:
      allOf:
        - $ref: '#/components/schemas/VoiceNote'
        - type: object
          properties:
            customPrompt:
              type: string
              nullable: true
            errorMessage:
              type: string
              nullable: true
            transcriptionModel:
              type: string
              nullable: true
              description: Model used for transcription
            whisperPrompt:
              type: string
              nullable: true
              description: Prompt used for GPT-4o transcription
            geminiSystemPrompt:
              type: string
              nullable: true
              description: System prompt used for Gemini transcription
            geminiUserPrompt:
              type: string
              nullable: true
              description: User prompt used for Gemini transcription

    Transcription:
      type: object
      required:
        - id
        - voiceNoteId
        - content
        - language
        - createdAt
        - provider
        - model
        - version
      properties:
        id:
          type: string
        voiceNoteId:
          type: string
        content:
          type: string
        language:
          type: string
          enum: [EN, PL]
        createdAt:
          type: string
          format: date-time
        provider:
          type: string
        model:
          type: string
        version:
          type: integer

    Summary:
      type: object
      required:
        - id
        - voiceNoteId
        - summary
        - keyPoints
        - actionItems
        - createdAt
        - provider
        - model
        - version
      properties:
        id:
          type: string
        voiceNoteId:
          type: string
        summary:
          type: string
        keyPoints:
          type: array
          items:
            type: string
        actionItems:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        provider:
          type: string
        model:
          type: string
        version:
          type: integer

    VoiceNoteExport:
      type: object
      properties:
        metadata:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
            createdAt:
              type: string
              format: date-time
            processedAt:
              type: string
              format: date-time
              nullable: true
            language:
              type: string
            duration:
              type: integer
        transcription:
          type: object
        summary:
          type: object

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
        - totalPages
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              additionalProperties: true
            traceId:
              type: string

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Not authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: System
    description: System health and readiness endpoints
  - name: Authentication
    description: User authentication and session management
  - name: Anonymous
    description: Anonymous user session tracking
  - name: Voice Notes
    description: Voice note CRUD operations
  - name: Processing
    description: Transcription and summarization operations
  - name: Export
    description: Export voice notes in various formats